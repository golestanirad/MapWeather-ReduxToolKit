{"version":3,"sources":["components/favoriteTab/favorite-tab.module.scss","firebase/firebase.utils.js","api/weatherAPI.js","redux/weatherSlice.js","redux/mapSlice.js","components/map/icons/heartIcon/heart-icon.component.jsx","components/map/icons/circleIcon/circle-icon.component.jsx","components/map/marker/map-marker.component.jsx","components/map/Map.component.jsx","utils/time.js","components/weatherCard/currentWeather/current-weather.component.jsx","components/weatherCard/forecastWeather/forecastCard/forecast-card.component.jsx","components/weatherCard/forecastWeather/forecast-weather.component.jsx","components/dialogPopUp/agree-dialog.component.jsx","components/weatherCard/weather-card.component.jsx","components/weatherCardList/weather-card-list.component.jsx","components/searchBox/search-box.component.jsx","components/loaders/ClockLoader/clock-loader.component.jsx","components/searchTab/Search-Tab.component.jsx","components/favoriteTab/favorite-tab.component.jsx","components/tabBar/TabBar.component.jsx","pages/home/home.component.jsx","pages/about/about.component.jsx","redux/userSlice.js","App.jsx","test-code.jsx","redux/rootReducer.js","redux/store.js","index.js","components/weatherCard/weather-card.module.scss","components/weatherCard/currentWeather/current-weather.module.scss","components/weatherCard/forecastWeather/forecastCard/forecast-card.module.scss","components/searchTab/Search-Tab.module.scss","components/searchBox/search-box.module.scss","pages/home/home.module.scss","components/map/Map.module.scss","components/map/icons/heartIcon/heart-icon.module.scss","components/map/icons/circleIcon/circle-icon.module.scss","components/weatherCardList/weather-card-list.module.scss"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","googleSignIn","signInWithPopup","firestore","fetchCurrentWeather","lat","lng","url","axios","get","error","console","log","fetchForecastWeather","fetchFavoriteLocations","uid","promise","collection","doc","setFavoriteLocation","location","locationName","coord","set","deleteFavoriteLocation","delete","fetchBatchWeatherLocations","locationsLatLng","a","promises","map","current","forecast","Promise","all","then","data","results","weather","createSlice","name","initialState","weatherLocations","favorites","visible","expanded","isLoading","reducers","getWeatherStart","state","action","getWeatherSuccess","payload","Object","keys","includes","push","getWeatherFailure","addToFavoriteListSuccess","addToFavoriteListFailure","removeFromFavoriteListSuccess","_","without","removeFromFavoriteListFailure","deleteLocation","initialFavoritesFetchStart","initialFavoritesFetchSuccess","initialFavoritesFetchFailure","addToVisibleLocations","removeFromVisibleLocations","addToExpandedCards","removeFromExpandedCards","restWholeData","actions","getWeather","dispatch","result","weatherData","makeWeatherData","addToFavoriteList","removeFromFavoriteList","city","list","main","dt","country","timezone","lon","temp","icon","description","currentLocation","HeartIcon","height","width","fill","stroke","strokeWidth","d","x","y","className","styles","text","Math","round","CircleIcon","cx","cy","r","MapMarker","props","position","type","SelectedIcon","heart","circle","L","divIcon","html","ReactDOMServer","renderToString","Marker","Map","useState","zoom","useDispatch","useSelector","visibleLocations","center","container","onContextMenu","e","latlng","TileLayer","attribution","indexOf","key","shortID","generate","converUnixTime","unixTime","timeFromat","moment","unix","utcOffset","format","CurrentWeather","time","iconAnddTemp","src","alt","style","color","fontSize","ForecastCard","timeOfDay","useStyles","makeStyles","table","row","borderTop","cell","maxWidth","padding","insideCell","display","flexDirection","justifyContent","alignItems","fontWeight","margin","day","borderRadius","backgroundColor","ForecastWeather","classes","TableContainer","component","Paper","Table","size","aria-label","TableBody","trimedForecastData","item","dayOfWeek","dayOfMonth","timeSlice","finalForcastData","daySlice","whichForecast","createForecaseData","TableRow","TableCell","align","forcasetSlice","AgreeDialog","showDialog","handleAgree","handleDisagree","title","content","Dialog","open","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","WeatherCard","locationID","userInfo","user","shouldBeVisible","isExpanded","setShowDialog","bar","Icon","WeatherCardList","locations","useEffect","ref","scrollTo","length","useRef","isEmpty","shortId","SearchBox","inputRef","algolia","placeholder","options","onChange","suggestion","setVal","onLimit","onError","placesRef","override","css","ClockLoader","loading","SearchTab","signOut","FavoriteTab","favoriteWeatherData","forEach","favorite","TabBar","children","tabsNames","React","value","setValue","AppBar","appBar","Tabs","event","newValue","indicatorColor","textColor","variant","tabName","Tab","shortid","label","index","disabled","swipeableViews","child","Home","About","userSlice","email","checkUserStatusStart","checkUserStatusSuccess","checkUserStatusFailure","loginUserStart","loginUserSuccess","loginUserFailure","App","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","unsubscribeFromAuth","onAuthStateChanged","userRef","exists","displayName","checkUserStatus","favoriteLocationsLatLng","weatherOfFavoriteLocations","finalWeatherDataForFavoriteLocations","assign","initialFavoritesFetch","basename","process","exact","path","Component","rootReducer","combineReducers","weatherReducer","mapReducer","userReducer","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fb5a8f2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"favorite-tab_container__1Q--y\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n/////// Set Up\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCBn2ciVykGZ5jzImQj1qoPojQLYMMcXEI\",\r\n  authDomain: \"map-weather-10531.firebaseapp.com\",\r\n  databaseURL: \"https://map-weather-10531.firebaseio.com\",\r\n  projectId: \"map-weather-10531\",\r\n  storageBucket: \"map-weather-10531.appspot.com\",\r\n  messagingSenderId: \"848134999340\",\r\n  appId: \"1:848134999340:web:cebf58200aa623eebf7089\",\r\n  measurementId: \"G-L04ENL8Z78\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n// provider.setCustomParameters({prompt: 'select_account'});   what does this do exactly\r\nexport const googleSignIn = () => firebase.auth().signInWithPopup(provider);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;\r\n////////  Methods\r\nexport const createUserProfileDocument = async (userAuth) => {\r\n   \r\n  try {\r\n    if (!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);  \r\n    const userSnapShot = await userRef.get();\r\n    if (!userSnapShot.exists)\r\n      firestore\r\n        .doc(`users/${userAuth.uid}`)\r\n        .set({ name: userAuth.displayName });\r\n    return userRef;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n/// project files\r\nimport { firestore } from \"../firebase/firebase.utils\";\r\n\r\nexport const fetchCurrentWeather = (lat, lng) => {\r\n  try {\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=b3e4ac819a75b7e1ffe53d3d5701cc90&units=metric`;\r\n    const promise = axios.get(url);\r\n    return promise;\r\n  } catch (error) {\r\n    console.log(\"errrorrrrr\", error);\r\n  }\r\n};\r\n\r\nexport const fetchForecastWeather = (lat, lng) => {\r\n  try {\r\n    const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&appid=b3e4ac819a75b7e1ffe53d3d5701cc90&units=metric`;\r\n    const promise = axios.get(url);\r\n    return promise;\r\n  } catch (error) {\r\n    console.log(\"errrorrrrr\", error);\r\n  }\r\n};\r\n\r\nexport const fetchFavoriteLocations = (uid) => {\r\n  try {\r\n    const promise = firestore\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"favorites\")\r\n      .get();\r\n    console.log(\"promiseeeeeeee\", promise);\r\n    return promise;\r\n  } catch (error) {\r\n    console.log(\"errorrrrrr\", error);\r\n  }\r\n};\r\n\r\nexport const setFavoriteLocation = (uid, location) => {\r\n  try {\r\n    const { locationName, coord } = location;\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(uid)\r\n      .collection(\"favorites\")\r\n      .doc(locationName)\r\n      .set({ ...coord });\r\n  } catch (error) {\r\n    console.log(\"setFavoriteLocation - error: \", error);\r\n  }\r\n};\r\n\r\nexport const deleteFavoriteLocation = (uid, location) => {\r\n  const { locationName } = location;\r\n  const promise = firestore\r\n    .collection(\"users\")\r\n    .doc(uid)\r\n    .collection(\"favorites\")\r\n    .doc(locationName)\r\n    .delete();\r\n  return promise;\r\n};\r\n\r\nexport const fetchBatchWeatherLocations = async (locationsLatLng) => {\r\n  try {\r\n    const promises = locationsLatLng.map(({ lat, lng }) => ({\r\n      current: fetchCurrentWeather(lat, lng),\r\n      forecast: fetchForecastWeather(lat, lng),\r\n    }));\r\n\r\n    const results = await Promise.all(\r\n      promises.map(({ current, forecast }) =>\r\n        Promise.all([current, forecast]).then(([current, forecast]) => ({\r\n          current: current.data,\r\n          forecast: forecast.data,\r\n        }))\r\n      )\r\n    );\r\n    return results;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n/// project files\r\nimport {\r\n  fetchForecastWeather,\r\n  fetchCurrentWeather,\r\n  setFavoriteLocation,\r\n  deleteFavoriteLocation,\r\n  fetchFavoriteLocations,\r\n  fetchBatchWeatherLocations,\r\n} from \"../api/weatherAPI\";\r\n\r\n/*\r\nweatherLocations: {\r\n  Yerevan - AM: {\r\n    timezone: 14400,\r\n    locationName: \"Yerevan - AM\",\r\n    coord; {lat:44,lng:48},\r\n    current:{\r\n      temp: 15,\r\n      icon: \"01n\",\r\n      dt: 1590519569,\r\n      description: \"scattered clouds\"\r\n    }, \r\n    forcase: [\r\n      {\r\n        dt:1590526800,\r\n        temp: 14.93,\r\n        icon: \"01n\",\r\n        description:\"scattered clouds\"\r\n      },\r\n      ...\r\n    ],\r\n  },\r\n  ...\r\n}\r\n*/\r\nconst locationsInitialState = {\r\n  weatherLocations: {},\r\n  favorites: [],\r\n  visible: [],\r\n  expanded: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst weather = createSlice({\r\n  name: \"weather\",\r\n  initialState: locationsInitialState,\r\n  reducers: {\r\n    getWeatherStart(state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    getWeatherSuccess(state, action) {\r\n      state.weatherLocations = {\r\n        ...action.payload,\r\n        ...state.weatherLocations,\r\n      };\r\n      const locationName = Object.keys(action.payload)[0];\r\n      if (!state.visible.includes(locationName)) {\r\n        state.visible.push(locationName);\r\n      }\r\n      if (!state.expanded.includes(locationName)) {\r\n        state.expanded.push(locationName);\r\n      }\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n    getWeatherFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    ///////\r\n    addToFavoriteListSuccess(state, action) {\r\n      state.favorites.push(action.payload);\r\n      state.isLoading = false;\r\n    },\r\n    addToFavoriteListFailure(state, action) {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    ///////\r\n    removeFromFavoriteListSuccess(state, action) {\r\n      state.favorites = _.without(state.favorites, action.payload);\r\n    },\r\n    removeFromFavoriteListFailure(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n    //////////\r\n    deleteLocation(state, action) {\r\n      delete state.weatherLocations[action.payload];\r\n    },\r\n    ////////\r\n    initialFavoritesFetchStart(state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    initialFavoritesFetchSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.weatherLocations = { ...state.weatherLocations, ...action.payload };\r\n      state.favorites = Object.keys(action.payload);\r\n\r\n      const locationsName = Object.keys(action.payload);\r\n      locationsName.map((locationName) => {\r\n        if (!state.visible.includes(locationName)) {\r\n          state.visible.push(locationName);\r\n        }\r\n        if (!state.expanded.includes(locationName)) {\r\n          state.expanded.push(locationName);\r\n        }\r\n      });\r\n    },\r\n    initialFavoritesFetchFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    //////////\r\n    addToVisibleLocations(state, action) {\r\n      state.visible.push(action.payload);\r\n    },\r\n    removeFromVisibleLocations(state, action) {\r\n      state.visible = _.without(state.visible, action.payload);\r\n    },\r\n    //////////\r\n    addToExpandedCards(state, action) {\r\n      state.expanded.push(action.payload);\r\n    },\r\n    removeFromExpandedCards(state, action) {\r\n      state.expanded = _.without(state.expanded, action.payload);\r\n    },\r\n    ///////\r\n    restWholeData(state) {\r\n      state.weatherLocations = {};\r\n      state.favorites = [];\r\n      state.visible = [];\r\n    },\r\n    /////////\r\n  },\r\n});\r\n\r\nexport const {\r\n  getWeatherStart,\r\n  getWeatherSuccess,\r\n  getWeatherFailure,\r\n  addToFavoriteListSuccess,\r\n  addToFavoriteListFailure,\r\n  removeFromFavoriteListSuccess,\r\n  removeFromFavoriteListFailure,\r\n  deleteLocation,\r\n  initialFavoritesFetchStart,\r\n  initialFavoritesFetchSuccess,\r\n  initialFavoritesFetchFailure,\r\n  addToVisibleLocations,\r\n  removeFromVisibleLocations,\r\n  restWholeData,\r\n  addToExpandedCards,\r\n  removeFromExpandedCards,\r\n} = weather.actions;\r\n\r\nexport default weather.reducer;\r\n\r\n///// Thunks\r\n\r\nexport const getWeather = (lat, lng) => async (dispatch) => {\r\n  try {\r\n    dispatch(getWeatherStart());\r\n    const result = await Promise.all([\r\n      fetchCurrentWeather(lat, lng),\r\n      fetchForecastWeather(lat, lng),\r\n    ]);\r\n    const current = result[0].data;\r\n    const forecast = result[1].data;\r\n    const weatherData = makeWeatherData(current, forecast);\r\n    dispatch(getWeatherSuccess(weatherData));\r\n  } catch (error) {\r\n    console.log(\"getWeather errorrrrrrr\", error);\r\n    dispatch(getWeatherFailure(error));\r\n  }\r\n};\r\n\r\nexport const addToFavoriteList = (uid, location) => async (dispatch) => {\r\n  try {\r\n    const { locationName } = location;\r\n    setFavoriteLocation(uid, location);\r\n    dispatch(addToFavoriteListSuccess(locationName));\r\n  } catch (error) {\r\n    console.log(\"addToFavoriteList errorrrrrrr\", error);\r\n    dispatch(addToFavoriteListFailure(error));\r\n  }\r\n};\r\n\r\nexport const removeFromFavoriteList = (uid, location) => async (dispatch) => {\r\n  try {\r\n    const { locationName } = location;\r\n    await deleteFavoriteLocation(uid, location);\r\n    dispatch(removeFromFavoriteListSuccess(locationName));\r\n  } catch (error) {}\r\n};\r\n\r\nexport const initialFavoritesFetch = (uid) => async (dispatch) => {\r\n  try {\r\n    if (uid) {\r\n      dispatch(initialFavoritesFetchStart());\r\n      const favoriteLocationsLatLng = [];\r\n      const favoriteLocationsSnapshot = await fetchFavoriteLocations(uid);\r\n      favoriteLocationsSnapshot.forEach((doc) => {\r\n        favoriteLocationsLatLng.push(doc.data());\r\n      });\r\n      const weatherOfFavoriteLocations = await fetchBatchWeatherLocations(\r\n        favoriteLocationsLatLng\r\n      );\r\n\r\n      if (weatherOfFavoriteLocations.length > 0) {\r\n        const finalWeatherDataForFavoriteLocations = {};\r\n        weatherOfFavoriteLocations.forEach(({ current, forecast }) => {\r\n          const weatherData = makeWeatherData(current, forecast);\r\n          Object.assign(finalWeatherDataForFavoriteLocations, weatherData);\r\n        });\r\n\r\n        dispatch(\r\n          initialFavoritesFetchSuccess(finalWeatherDataForFavoriteLocations)\r\n        );\r\n      }\r\n    } else {\r\n      ///\r\n    }\r\n  } catch (error) {\r\n    console.log(\"initialFavoritesFetch errorrrrrrr\", error);\r\n    dispatch(initialFavoritesFetchFailure(error));\r\n  }\r\n};\r\n\r\n//// Helpers\r\nconst makeWeatherData = (current, forecast) => {\r\n  const { city, list } = forecast;\r\n  const { main, weather, dt, coord } = current;\r\n  const weatherData = {\r\n    [city.name + \" - \" + city.country]: {\r\n      timezone: city.timezone,\r\n      locationName: city.name + \" - \" + city.country,\r\n      coord: { lat: coord.lat, lng: coord.lon },\r\n      current: {\r\n        temp: main.temp,\r\n        icon: weather[0].icon,\r\n        dt,\r\n        description: weather[0].description,\r\n      },\r\n      forecast: list.map(({ main, weather, dt }) => {\r\n        return {\r\n          temp: main.temp,\r\n          icon: weather[0].icon,\r\n          dt,\r\n          description: weather[0].description,\r\n        };\r\n      }),\r\n    },\r\n  };\r\n  return weatherData;\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst mapInitialState = {\r\n  currentLocation: { lat: 49.2827, lng: -123.1207 },\r\n};\r\n\r\nconst map = createSlice({\r\n  name: \"map\",\r\n  initialState: mapInitialState,\r\n  reducers: {\r\n    currentLocation(state, action) {\r\n      state.currentLocation = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { currentLocation } = map.actions;\r\n\r\nexport default map.reducer;\r\n","import React from \"react\";\r\n/// project files\r\nimport styles from './heart-icon.module.scss';\r\n\r\nconst HeartIcon = ({ temp }) => {\r\n  return (\r\n    <svg height=\"100\" width=\"100\">\r\n      <g>\r\n        <path\r\n          fill=\"#F50057\"\r\n          stroke=\"gray\"\r\n          strokeWidth=\"1\"\r\n          d=\"M30 4.435c-1.989-5.399-14-6.597-14 5.568 2 6.068 5.06 11.481 14 16.997 10.94-7.516 14-12.929 14-16.997 2-10.118-12-10.999-14-5.568z\"\r\n        />\r\n        <text x=\"22%\" y=\"17%\" className={styles.text}>\r\n          {Math.round(temp)}\r\n        </text>\r\n      </g>\r\n      Sorry, your browser does not support inline SVG.\r\n    </svg>\r\n  );\r\n}; \r\n\r\nexport default HeartIcon;\r\n","import React from \"react\";\r\n//// projetc files\r\nimport styles from \"./circle-icon.module.scss\";\r\n\r\n\r\nconst CircleIcon = ({ temp }) => {\r\n  ///Return\r\n  return (\r\n    <svg height=\"100\" width=\"100\">\r\n      <g>\r\n        <circle\r\n          cx=\"25\"\r\n          cy=\"25\"\r\n          r=\"15\"\r\n          stroke=\"gray\"\r\n          strokeWidth=\"1\"\r\n          fill=\"#F50057\"\r\n        />\r\n        <text x=\"18%\" y=\"30%\" className={styles.text}>\r\n          {Math.round(temp)}\r\n        </text>\r\n      </g>\r\n      Sorry, your browser does not support inline SVG.\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CircleIcon;\r\n","import React from \"react\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n/// project files\r\nimport styles from \"./map-marker.module.scss\";\r\nimport HeartIcon from \"../icons/heartIcon/heart-icon.component\";\r\nimport CircleIcon from \"../icons/circleIcon/circle-icon.component\";\r\n\r\nconst MapMarker = (props) => {\r\n  //// Props\r\n  const { position,temp, type } = props;\r\n\r\n\r\n  //// Return\r\n\r\n  const icons = {\r\n    heart: HeartIcon,\r\n    circle: CircleIcon,\r\n  };\r\n  const SelectedIcon = icons[type];\r\n\r\n  const icon = L.divIcon({\r\n    html: ReactDOMServer.renderToString(<SelectedIcon temp={temp} />),\r\n  });\r\n\r\n  return <Marker position={position} icon={icon} />;\r\n};\r\n\r\nexport default MapMarker;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport _ from \"lodash\";\r\nimport shortID from \"shortid\";\r\n/// project fiels\r\nimport styles from \"./Map.module.scss\";\r\nimport { getWeather } from \"../../redux/weatherSlice\";\r\nimport { currentLocation } from \"../../redux/mapSlice\";\r\nimport MapMarker from \"./marker/map-marker.component\";\r\n\r\nconst Map = () => {\r\n  /// Hooks\r\n  const [zoom, setZoom] = useState(10);\r\n  const dispatch = useDispatch();\r\n  const { lat, lng } = useSelector((state) => state.map.currentLocation);\r\n  const weatherLocations = useSelector(\r\n    (state) => state.weather.weatherLocations\r\n  );\r\n  const favorites = useSelector((state) => state.weather.favorites);\r\n  const visibleLocations = useSelector((state) => state.weather.visible);\r\n  //// Handlers\r\n  const handleContextMenu = (e) => {\r\n    const {\r\n      latlng: { lat, lng },\r\n    } = e;\r\n    dispatch(getWeather(lat, lng));\r\n  };\r\n  ///  Return\r\n  return (\r\n    <LeafletMap\r\n      center={[lat, lng]}\r\n      zoom={zoom}\r\n      className={styles.container}\r\n      onContextMenu={handleContextMenu}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {_.map(weatherLocations, (location) => {\r\n        if (visibleLocations.indexOf(location.locationName) >= 0)\r\n          return (\r\n            <MapMarker\r\n              key={shortID.generate()}\r\n              position={{\r\n                lat: location.coord.lat,\r\n                lng: location.coord.lng,\r\n              }}\r\n              temp={location.current.temp}\r\n              type={\r\n                favorites.indexOf(location.locationName) >= 0\r\n                  ? \"heart\"\r\n                  : \"circle\"\r\n              }\r\n            />\r\n          );\r\n      })}\r\n    </LeafletMap>\r\n  );\r\n  // }\r\n};\r\n\r\nexport default Map;\r\n","import moment from \"moment-timezone\";\r\n\r\nexport const converUnixTime = (\r\n  unixTime,\r\n  timezone,\r\n  timeFromat\r\n) => {\r\n  //return moment.unix(unixTime).tz(timeZoneToBeConvertedTo).format(timeFromat);\r\n  return moment\r\n    .unix(unixTime)\r\n    .utcOffset(timezone / 60)\r\n    .format(timeFromat);\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n/// project files\r\nimport styles from \"./current-weather.module.scss\";\r\nimport { converUnixTime } from \"../../../utils/time\";\r\n\r\nconst CurrentWeather = ({location}) => {\r\n  //// Props\r\n  const { current,  timezone } = location;\r\n  const {\r\n    dt,\r\n    description,   \r\n     temp ,\r\n     icon\r\n  } = current;\r\n  ///// Helpers\r\n\r\n  const time = converUnixTime(dt, timezone, \"DD/MM/YYYY HH:MM\");\r\n  ///// Return\r\n  return (\r\n    <div className={styles.container}>\r\n      <span>{time}</span>\r\n      <span>{description}</span>\r\n      <div className={styles.iconAnddTemp}>\r\n        <img\r\n          className={styles.icon}\r\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n          alt=\"weather icon\"\r\n        />\r\n        <span style={{ color: \"black\", fontSize: \"30px\" }}>\r\n          {Math.round(temp)} &#8451;\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\n//// project files\r\nimport styles from \"./forecast-card.module.scss\";\r\n\r\nconst ForecastCard = (props) => {\r\n  /// Props\r\n  const { icon, temp, timeOfDay } = props;\r\n  /// Return\r\n  return (\r\n    <div className={styles.container} >\r\n      <span>{timeOfDay}</span>\r\n      <span>{temp} &#8451;</span>\r\n\r\n      <img\r\n        className={styles.icon}      \r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        alt=\"weather icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastCard;\r\n","import React, { useEffect } from \"react\";\r\nimport shortID from \"shortid\";\r\n/// project files\r\nimport styles from \"./forecast-weather.module.scss\";\r\nimport ForecastCard from \"./forecastCard/forecast-card.component\";\r\nimport { converUnixTime } from \"../../../utils/time\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  row: {\r\n    borderTop: \"1px solid lightGray\",\r\n  },\r\n  cell: {\r\n    maxWidth: \"35px\",\r\n    padding: \"6px\",\r\n  },\r\n  insideCell: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"10px\",\r\n    margin: \"2px\",\r\n  },\r\n  day: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    fontSize: \"15px\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"10px\",\r\n    width: \"37px\",\r\n    padding: \"0 2px\",\r\n  },\r\n  icon: {\r\n    backgroundColor: \"gray\",\r\n  },\r\n});\r\n\r\nconst ForecastWeather = ({ location }) => {\r\n  //// Props\r\n  const { forecast, timezone } = location;\r\n\r\n  ///// Hooks\r\n  const classes = useStyles();\r\n\r\n  ////Helpers\r\n  const createForecaseData = (forecast) => {\r\n    const trimedForecastData = [];\r\n    forecast.map((item) => {\r\n      const dayOfWeek = converUnixTime(item.dt, timezone, \"ddd\");\r\n      const timeOfDay = converUnixTime(item.dt, timezone, \"hh A\");\r\n      const dayOfMonth = converUnixTime(item.dt, timezone, \"MMM/DD\");\r\n      const timeSlice = {};\r\n      timeSlice[\"temp\"] = Math.round(item.temp);\r\n      timeSlice[\"icon\"] = item.icon;\r\n      timeSlice[\"dayOfWeek\"] = dayOfWeek;\r\n      timeSlice[\"timeOfDay\"] = timeOfDay;\r\n      timeSlice[\"dayOfMonth\"] = dayOfMonth;\r\n      trimedForecastData.push(timeSlice);\r\n    });\r\n\r\n\r\n    let day = trimedForecastData[0].dayOfWeek;\r\n    const finalForcastData = [];\r\n    let daySlice = {};\r\n    let whichForecast = 9;\r\n    trimedForecastData.map((item) => {\r\n      if (item.dayOfWeek === day) whichForecast--;\r\n    });\r\n\r\n    trimedForecastData.map((item) => {\r\n      if (item.dayOfWeek !== day) {\r\n        finalForcastData.push(daySlice);\r\n        daySlice = {};\r\n        day = item.dayOfWeek;\r\n        whichForecast = 1;\r\n      }\r\n      daySlice[\"day\"] = item.dayOfWeek;\r\n      daySlice[\"dayOfMonth\"] = item.dayOfMonth;\r\n      switch (whichForecast) {\r\n        case 1:\r\n          daySlice[\"firstForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 2:\r\n          daySlice[\"secondForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 3:\r\n          daySlice[\"thirdForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 4:\r\n          daySlice[\"fourthForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 5:\r\n          daySlice[\"fifthForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 6:\r\n          daySlice[\"sixthForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 7:\r\n          daySlice[\"seventhForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n        case 8:\r\n          daySlice[\"eighthForecast\"] = {\r\n            temp: item.temp,\r\n            icon: item.icon,\r\n            timeOfDay: item.timeOfDay,\r\n          };\r\n          whichForecast++;\r\n          break;\r\n      }\r\n    });\r\n   \r\n    return finalForcastData;\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.table}>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableBody style={{ width: \"100px\" }}>\r\n          {createForecaseData(forecast).map((row) => (\r\n            <TableRow className={classes.row} key={shortID.generate()}>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                <div className={classes.day}>\r\n                  <span>{row.dayOfMonth}</span>\r\n                  <span>{row.day}</span>\r\n                </div>\r\n              </TableCell>\r\n              {[\r\n                \"firstForecast\",\r\n                \"secondForecast\",\r\n                \"thirdForecast\",\r\n                \"fourthForecast\",\r\n                \"fifthForecast\",\r\n                \"sixthForecast\",\r\n                \"seventhForecast\",\r\n                \"eighthForecast\",\r\n              ].map((forcasetSlice) => (\r\n                <TableCell\r\n                  key={shortID.generate()}\r\n                  className={classes.cell}\r\n                  align=\"right\"\r\n                >\r\n                  {row[forcasetSlice] && (\r\n                    <ForecastCard\r\n                      timeOfDay={row[forcasetSlice].timeOfDay}\r\n                      temp={row[forcasetSlice].temp}\r\n                      icon={row[forcasetSlice].icon}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default ForecastWeather;\r\n","import React,{useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst AgreeDialog = (props) => {\r\n  /// Props\r\n  const { showDialog, handleAgree, handleDisagree, title, content } = props;\r\n  ///  Hooks\r\n  /// Return\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={showDialog}\r\n        aria-labelledby=\"popup dialog\"\r\n        aria-describedby=\"you need to agree to be able to continue\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\"> \r\n         {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDisagree} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleAgree} color=\"primary\" >\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgreeDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport _ from \"lodash\";\r\n/// project files\r\nimport styles from \"./weather-card.module.scss\";\r\nimport {\r\n  addToFavoriteList,\r\n  removeFromFavoriteList,\r\n  deleteLocation,\r\n  addToVisibleLocations,\r\n  removeFromVisibleLocations,\r\n  addToExpandedCards,\r\n  removeFromExpandedCards,\r\n} from \"../../redux/weatherSlice\";\r\nimport CurrentWeather from \"./currentWeather/current-weather.component\";\r\nimport ForecastWeather from \"./forecastWeather/forecast-weather.component\";\r\nimport AgreeDialog from \"../dialogPopUp/agree-dialog.component\";\r\nimport { googleSignIn } from \"../../firebase/firebase.utils\";\r\n\r\nconst WeatherCard = (props) => {\r\n  ///// Props\r\n  const { location, locationID } = props;\r\n  const { locationName } = location;\r\n\r\n  //// Hooks\r\n  const dispatch = useDispatch();\r\n\r\n  const favorites = useSelector((state) => state.weather.favorites);\r\n  const userInfo = useSelector((state) => state.user.userInfo);\r\n  const shouldBeVisible = useSelector((state) =>\r\n    state.weather.visible.includes(locationID)\r\n  );\r\n  const isExpanded = useSelector((state) =>\r\n    state.weather.expanded.includes(locationID)\r\n  );\r\n \r\n\r\n  const [showDialog, setShowDialog] = useState(false);\r\n\r\n  //// Handlers\r\n  const handleFavoriteClick = () => {\r\n    if (!userInfo.name) {\r\n      setShowDialog(true);\r\n    } else {\r\n      if (favorites.indexOf(locationID) < 0)\r\n        dispatch(addToFavoriteList(userInfo.uid, location));\r\n      else dispatch(removeFromFavoriteList(userInfo.uid, location));\r\n    }\r\n  };\r\n\r\n  const handleVisibility = () => {\r\n    if (shouldBeVisible) {\r\n      dispatch(removeFromVisibleLocations(locationID));\r\n    } else {\r\n      dispatch(addToVisibleLocations(locationID));\r\n    }\r\n  };\r\n\r\n  const handleExpanding = () => {\r\n    if (isExpanded) {\r\n      dispatch(removeFromExpandedCards(locationID));\r\n    } else {\r\n      dispatch(addToExpandedCards(locationID));\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    dispatch(deleteLocation(locationID));\r\n  };\r\n\r\n  const handleAgree = () => {\r\n    setShowDialog(false);\r\n    googleSignIn().then((result) => {\r\n      console.log(\"result\", result);\r\n\r\n      if (!favorites.includes(locationID)) {\r\n        console.log(\"result.user.uid\", result.user.uid);\r\n        console.log(\"location\", location);\r\n        dispatch(addToFavoriteList(result.user.uid, location));\r\n      } else {\r\n        dispatch(removeFromFavoriteList(result.user.uid, location));\r\n      }\r\n    });\r\n  };\r\n  const handleDisagree = () => {\r\n    setShowDialog(false);\r\n  };\r\n  ///// Return\r\n  return (\r\n    <div className={styles.container}>\r\n     \r\n          <AgreeDialog\r\n            showDialog={showDialog}\r\n            handleAgree={handleAgree}\r\n            handleDisagree={handleDisagree}\r\n            title={\" Would you like to login with your Google account?\"}\r\n            content={\r\n              \"In order to save your favorites you need to login so we can save them for you :)\"\r\n            }\r\n          />\r\n          <div className={styles.bar}>\r\n            <Icon\r\n              className={styles.icon}\r\n              onClick={handleVisibility}\r\n              color=\"primary\"\r\n            >\r\n              {shouldBeVisible ? \"visibility_on\" : \"visibility_off\"}\r\n            </Icon>\r\n            <Icon\r\n              className={styles.icon}\r\n              onClick={handleExpanding}\r\n              color=\"primary\"\r\n            >\r\n              {isExpanded ? \"expand_more\" : \"expand_less\"}\r\n            </Icon>\r\n            <span className={styles.name}>{locationName}</span>\r\n            <Icon className={styles.icon} onClick={handleDeleteClick}>\r\n              delete-outline\r\n            </Icon>\r\n            <Icon\r\n              className={styles.icon}\r\n              onClick={handleFavoriteClick}\r\n              color=\"secondary\"\r\n            >\r\n              {favorites.indexOf(locationID) >= 0\r\n                ? \"favorite\"\r\n                : \"favorite_border\"}\r\n            </Icon>\r\n          </div>\r\n          {isExpanded && (\r\n            <>\r\n              <CurrentWeather location={location} />\r\n              <ForecastWeather location={location} />\r\n            </>\r\n          )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport shortId from \"shortid\";\r\n\r\n//// project files\r\nimport WeatherCard from \"../weatherCard/weather-card.component\";\r\nimport styles from \"./weather-card-list.module.scss\";\r\n\r\nconst WeatherCardList = (props) => {\r\n  ///Props\r\n\r\n  const { locations } = props;\r\n  // Hooks\r\n  useEffect(() => {\r\n    ref.current.scrollTo(0, 0);\r\n  }, [Object.keys(locations).length]);\r\n  //// Refs\r\n  const ref = useRef();\r\n  /// Return\r\n  return (\r\n    <div className={styles.container} ref={ref}>     \r\n      {!_.isEmpty(locations) &&\r\n        _.map(locations, (location, id) => (\r\n          <WeatherCard\r\n            location={location}\r\n            locationID={id}\r\n            key={shortId.generate()}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCardList;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AlgoliaPlaces from \"algolia-places-react\";\r\n//// project files\r\nimport styles from \"./search-box.module.scss\";\r\nimport { getWeather } from \"../../redux/weatherSlice\";\r\nimport { currentLocation } from \"../../redux/mapSlice\";\r\n\r\nconst SearchBox = () => {\r\n  //// Hooks\r\n  const dispatch = useDispatch();\r\n  //// Handlers\r\n  const handleLocationSelect = (e) => {  \r\n    const { lat, lng } = e.suggestion.latlng;\r\n    dispatch(getWeather(lat,lng));\r\n    inputRef.setVal(\"\");\r\n  };\r\n  //// Ref\r\n  let inputRef = null;\r\n  //// Return\r\n  return (\r\n    <div className={styles.container}>\r\n      <AlgoliaPlaces\r\n        className={styles.algolia}\r\n        placeholder=\"Write a city name\"\r\n        options={{\r\n          type: \"city\",\r\n        }}\r\n        onChange={handleLocationSelect}\r\n        onLimit={(e) => console.log(\"onLimit\", e)}\r\n        onError={(e) => console.log(\"onError\", e)}\r\n        placesRef={(ref) => {\r\n          inputRef = ref;\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport _ClockLoader from \"react-spinners/ClockLoader\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 5px auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst ClockLoader = () => {\r\n  /// Return\r\n  return (\r\n    <_ClockLoader css={override} size={40} color={\"#123abc\"} loading={true} />\r\n  );\r\n};\r\nexport default ClockLoader;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n////// project fiels\r\nimport Map from \"../map/Map.component\";\r\nimport WeatherCardList from \"../weatherCardList/weather-card-list.component\";\r\nimport styles from \"./Search-Tab.module.scss\";\r\nimport SearchBox from \"../searchBox/search-box.component\";\r\nimport { auth, googleSignIn } from \"../../firebase/firebase.utils\";\r\nimport { restWholeData } from \"../../redux/weatherSlice\";\r\nimport ClockLoader from '../loaders/ClockLoader/clock-loader.component';\r\n\r\nconst SearchTab = () => {\r\n  //// Hooks\r\n\r\n  const dispatch = useDispatch();\r\n  const weatherLocations = useSelector(\r\n    (state) => state.weather.weatherLocations\r\n  );\r\n  const userInfo = useSelector((state) => state.user.userInfo);\r\n  const isLoading = useSelector((state) => state.weather.isLoading);\r\n  ////Return\r\n  return (\r\n    <div className={styles.container}>\r\n      1111{userInfo.name}222\r\n      <button\r\n        onClick={() => {\r\n          auth.signOut();\r\n          dispatch(restWholeData());\r\n        }}\r\n      >\r\n        logout\r\n      </button>\r\n      <button onClick={googleSignIn}>login</button>\r\n      <SearchBox />\r\n      <Map />\r\n      {isLoading && <ClockLoader />}\r\n      <div className={styles.list}>\r\n        <WeatherCardList locations={weatherLocations} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchTab;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n///// project files\r\nimport styles from \"./favorite-tab.module.scss\";\r\nimport WeatherCardList from \"../weatherCardList/weather-card-list.component\";\r\n\r\nconst FavoriteTab = () => {\r\n  ////Hooks\r\n  const favorites = useSelector((state) => {\r\n    const { favorites, weatherLocations } = state.weather;\r\n    const favoriteWeatherData = {};\r\n    favorites.forEach(\r\n      (favorite) =>\r\n        weatherLocations[favorite] &&\r\n        (favoriteWeatherData[favorite] = weatherLocations[favorite])\r\n    );\r\n    return favoriteWeatherData;\r\n  });\r\n\r\n  ///// Return\r\n  return (\r\n    <div className={styles.container}>\r\n      <WeatherCardList locations={favorites} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteTab;\r\n","import React, {useRef} from \"react\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport shortid from \"shortid\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport SearchTab from \"../../components/searchTab/Search-Tab.component\";\r\nimport FavoriteTab from \"../../components/favoriteTab/favorite-tab.component\";\r\n\r\n///// project files\r\nimport styles from \"./TabBar.module.scss\";\r\nimport SearchBox from \"../searchBox/search-box.component\";\r\n\r\nconst TabBar = ({ children, tabsNames, onClick }) => {\r\n  /// Hooks\r\n  const [value, setValue] = React.useState(0);\r\n  /// Handlers\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  ///// Return\r\n  return (\r\n    <div className={styles.container}>\r\n      <AppBar className={styles.appBar} position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          {tabsNames.map((tabName) => (\r\n            <Tab\r\n              key={shortid.generate()}\r\n              label={tabName}\r\n              onClick={() => onClick?.(tabName)}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews index={value} disabled className={styles.swipeableViews}>\r\n        {children.map((child) => (\r\n          <div key={shortid.generate()}>{child}</div>\r\n        ))}\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n/// project files\r\nimport styles from \"./home.module.scss\";\r\nimport TabBar from \"../../components/tabBar/TabBar.component\";\r\nimport SearchTab from \"../../components/searchTab/Search-Tab.component\";\r\nimport FavoriteTab from \"../../components/favoriteTab/favorite-tab.component\";\r\nimport { googleSignIn } from \"../../firebase/firebase.utils\";\r\nimport AgreeDialog from \"../../components/dialogPopUp/agree-dialog.component\";\r\n\r\nconst Home = () => {\r\n  //// Hooks\r\n  const userInfo = useSelector((state) => state.user.userInfo);\r\n\r\n  const [showDialog, setShowDialog] = useState(false);\r\n\r\n  //// Handlers\r\n  const handleAgree = () => {\r\n    setShowDialog(false);\r\n    googleSignIn();\r\n  };\r\n\r\n  const handleDisagree = () => {\r\n    setShowDialog(false);\r\n  };\r\n  //// Handlers\r\n  const handleTabSelect = (tabName) => {\r\n    if (tabName === \"Favorite\" && !userInfo.name) {\r\n      setShowDialog(true);\r\n    }\r\n  };\r\n  //// Return\r\n  return (\r\n    <div className={styles.container}>\r\n      <AgreeDialog\r\n        showDialog={showDialog}\r\n        handleAgree={handleAgree}\r\n        handleDisagree={handleDisagree}\r\n        title={\"Would you like to login with your Google account?\"}\r\n        content={\r\n          \"In order to see your favorites you need to login so we can find your list :)\"\r\n        }\r\n      />\r\n      <TabBar tabsNames={[\"Search\", \"Favorite\"]} onClick={handleTabSelect}>\r\n        <SearchTab />\r\n        <FavoriteTab />\r\n      </TabBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n/// project files\r\nimport styles from \"./about.module.scss\";\r\n\r\nconst About = () => {\r\n  return <div>about us :)</div>;\r\n};\r\n\r\nexport default About;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n/// project files\r\nimport { auth, firestore, googleSignIn } from \"../firebase/firebase.utils\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    userInfo: { name: null, email: null, uid: null },\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n\r\n  reducers: {\r\n    checkUserStatusStart(state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    checkUserStatusSuccess(state, action) {\r\n      const { name, email, uid } = action.payload;\r\n      state.userInfo = { name, email, uid };\r\n      state.isLoading = false;\r\n    },\r\n    checkUserStatusFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    loginUserStart(state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    loginUserSuccess(state, action) {\r\n      state.isLoading = false;\r\n    },\r\n    loginUserFailure(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  checkUserStatusStart,\r\n  checkUserStatusSuccess,\r\n  checkUserStatusFailure,\r\n  loginUserFailure,\r\n  loginUserStart,\r\n  loginUserSuccess,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\n//// Thunks\r\nexport const checkUserStatus = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch(checkUserStatusStart());\r\n    if (!user) {\r\n      dispatch(checkUserStatusSuccess({ name: null, email: null, uid: null }));\r\n      return;\r\n    }\r\n    const userRef = firestore.collection(\"users\").doc(user.uid);\r\n    if (!userRef.exists)\r\n      await userRef.set({\r\n        name: user.displayName,\r\n        email: user.email,\r\n        uid: user.uid,\r\n      });\r\n    dispatch(\r\n      checkUserStatusSuccess({\r\n        name: user.displayName,\r\n        email: user.email,\r\n        uid: user.uid,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    console.log(\"error at login userrrrrrrr\", error);\r\n    dispatch(checkUserStatusFailure(error));\r\n  }\r\n};\r\n\r\nexport const loginUser = () => (dispatch) => {\r\n  try {\r\n    dispatch(loginUserStart());\r\n    googleSignIn();\r\n    dispatch(loginUserSuccess());\r\n  } catch (error) {\r\n    dispatch(loginUserFailure(error));\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n//// project files\r\nimport \"./App.css\";\r\nimport Home from \"./pages/home/home.component\";\r\nimport About from \"./pages/about/about.component\";\r\nimport { currentLocation } from \"./redux/mapSlice\";\r\nimport { getWeather, initialFavoritesFetch } from \"./redux/weatherSlice\";\r\nimport { checkUserStatus } from \"./redux/userSlice\";\r\nimport { auth } from \"./firebase/firebase.utils\";\r\nimport { fetchFavoriteLocations } from \"./api/weatherAPI\";\r\n\r\nconst App = () => {\r\n  //// Hooks\r\n  const dispatch = useDispatch();\r\n\r\n  const uid = useSelector((state) => state.user.userInfo.uid);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => {\r\n        dispatch(currentLocation({ lat: latitude, lng: longitude }));\r\n        dispatch(getWeather(latitude, longitude));\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsubscribeFromAuth = auth.onAuthStateChanged((user) => {\r\n      dispatch(checkUserStatus(user));\r\n    });\r\n\r\n    return () => {\r\n      unsubscribeFromAuth();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(initialFavoritesFetch(uid));\r\n  }, [uid]);\r\n\r\n  /// Return\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <About />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n////  1) add map - DONE\r\n//// 2) weather icons - DONE\r\n//// 3) make a list of search location under the map instead of only one card - DONE\r\n//// 4) add search input - DONE\r\n//// 5) add favorite list and icon - DONE\r\n///// 6) add favorite - DONE\r\n////  7) add loading - DONE\r\n////// 8) move scroll to the top after adding to the list - DONE\r\n//// 9) keep the last location on map - DONE\r\n/// 10) pin locations on the map with temperature on the pin - DONE\r\n///// 11) handle error (for instance, city not found)\r\n/////  12) customize pins on map - DONE\r\n///// 13  BUG , making favorite will jump the list to teh top  - DONE\r\n///14) read favorite from main list - DONE\r\n///// 15) set my corrent location at start - DONE\r\n///// 16)  make not favorite one as a circle on the map - DONE\r\n//// 17) remove cards capability - DONE\r\n/////18 ) BUG  when using search box, the mao marker is very off - DONE\r\n//// 19) add weather forcats ;) - DONE\r\n//// 20)  click on a more icon on a card and then get all the data in a popup\r\n//// 21) add login attempt for favorite sections - DONE\r\n//// 22) add favorite to firestore - DONE\r\n///// 23) BUG make sure deleting a favorite item won't affect its being-favorite and if its back it should still be favorite - DONE\r\n//// 24) remove favorite from firestore - DONE\r\n///// 25) fetch user favorites after loggin in - DONE\r\n//// 26) add display-eye icon instead of deleteing - DONE\r\n//// 27) BUG - after logging in, the  slected location won't turn into favorite - DONE\r\n//// BUG 28)  after adding a new one all colapsed ones will open again - DONE\r\n///// 29) remove libs that you don't need\r\n///// 30) go on react-native \r\n////// 31) change time to 2am, 8pm .......\r\n","import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red; \r\n`;\r\n\r\nexport default class AwesomeComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div  style={{ backgroundColor:\"pink\" }}>\r\n        <ClockLoader\r\n          css={override}      \r\n          size={30}\r\n          color={\"#123abc\"}\r\n          loading={this.state.loading}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n/// project files\r\nimport weatherReducer from \"./weatherSlice\";\r\nimport mapReducer from \"./mapSlice\";\r\nimport userReducer from \"./userSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  map: mapReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n/// project files\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n///// project files\r\nimport App from \"./App\";\r\nimport TestCode from './test-code';\r\nimport store from \"./redux/store\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"weather-card_container__3JHUV\",\"bar\":\"weather-card_bar__6RXbt\",\"icon\":\"weather-card_icon__1vPvu\",\"name\":\"weather-card_name__Fb8bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"current-weather_container__wKpuE\",\"iconAnddTemp\":\"current-weather_iconAnddTemp__3K77A\",\"icon\":\"current-weather_icon__BM6wD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forecast-card_container__1qZsT\",\"icon\":\"forecast-card_icon__-TpST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search-Tab_container__2o8sR\",\"list\":\"Search-Tab_list__205Im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"search-box_container__2vE2e\",\"algolia\":\"search-box_algolia__2XrLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__17Yf0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Map_container__2covr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"heart-icon_text__Rz5Uj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"circle-icon_text__1K2zY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"weather-card-list_container__1KhbA\"};"],"sourceRoot":""}